/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.commerce.demo.product.specification.template.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.LocaleException;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.LocalizedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the ProductSpecificationMapping service. Represents a row in the &quot;PT_ProductSpecificationMapping&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.commerce.demo.product.specification.template.model.impl.ProductSpecificationMappingModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.commerce.demo.product.specification.template.model.impl.ProductSpecificationMappingImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ProductSpecificationMapping
 * @generated
 */
@ProviderType
public interface ProductSpecificationMappingModel
	extends BaseModel<ProductSpecificationMapping>, LocalizedModel,
			ShardedModel, StagedAuditedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a product specification mapping model instance should use the {@link ProductSpecificationMapping} interface instead.
	 */

	/**
	 * Returns the primary key of this product specification mapping.
	 *
	 * @return the primary key of this product specification mapping
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this product specification mapping.
	 *
	 * @param primaryKey the primary key of this product specification mapping
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this product specification mapping.
	 *
	 * @return the uuid of this product specification mapping
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this product specification mapping.
	 *
	 * @param uuid the uuid of this product specification mapping
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the product specification mapping ID of this product specification mapping.
	 *
	 * @return the product specification mapping ID of this product specification mapping
	 */
	public long getProductSpecificationMappingId();

	/**
	 * Sets the product specification mapping ID of this product specification mapping.
	 *
	 * @param productSpecificationMappingId the product specification mapping ID of this product specification mapping
	 */
	public void setProductSpecificationMappingId(
		long productSpecificationMappingId);

	/**
	 * Returns the company ID of this product specification mapping.
	 *
	 * @return the company ID of this product specification mapping
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this product specification mapping.
	 *
	 * @param companyId the company ID of this product specification mapping
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this product specification mapping.
	 *
	 * @return the user ID of this product specification mapping
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this product specification mapping.
	 *
	 * @param userId the user ID of this product specification mapping
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this product specification mapping.
	 *
	 * @return the user uuid of this product specification mapping
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this product specification mapping.
	 *
	 * @param userUuid the user uuid of this product specification mapping
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this product specification mapping.
	 *
	 * @return the user name of this product specification mapping
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this product specification mapping.
	 *
	 * @param userName the user name of this product specification mapping
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this product specification mapping.
	 *
	 * @return the create date of this product specification mapping
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this product specification mapping.
	 *
	 * @param createDate the create date of this product specification mapping
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this product specification mapping.
	 *
	 * @return the modified date of this product specification mapping
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this product specification mapping.
	 *
	 * @param modifiedDate the modified date of this product specification mapping
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the product type of this product specification mapping.
	 *
	 * @return the product type of this product specification mapping
	 */
	@AutoEscape
	public String getProductType();

	/**
	 * Sets the product type of this product specification mapping.
	 *
	 * @param productType the product type of this product specification mapping
	 */
	public void setProductType(String productType);

	/**
	 * Returns the cp specification option ID of this product specification mapping.
	 *
	 * @return the cp specification option ID of this product specification mapping
	 */
	public long getCpSpecificationOptionId();

	/**
	 * Sets the cp specification option ID of this product specification mapping.
	 *
	 * @param cpSpecificationOptionId the cp specification option ID of this product specification mapping
	 */
	public void setCpSpecificationOptionId(long cpSpecificationOptionId);

	/**
	 * Returns the cp option category ID of this product specification mapping.
	 *
	 * @return the cp option category ID of this product specification mapping
	 */
	public long getCpOptionCategoryId();

	/**
	 * Sets the cp option category ID of this product specification mapping.
	 *
	 * @param cpOptionCategoryId the cp option category ID of this product specification mapping
	 */
	public void setCpOptionCategoryId(long cpOptionCategoryId);

	/**
	 * Returns the priority of this product specification mapping.
	 *
	 * @return the priority of this product specification mapping
	 */
	public double getPriority();

	/**
	 * Sets the priority of this product specification mapping.
	 *
	 * @param priority the priority of this product specification mapping
	 */
	public void setPriority(double priority);

	/**
	 * Returns the default value of this product specification mapping.
	 *
	 * @return the default value of this product specification mapping
	 */
	public String getDefaultValue();

	/**
	 * Returns the localized default value of this product specification mapping in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized default value of this product specification mapping
	 */
	@AutoEscape
	public String getDefaultValue(Locale locale);

	/**
	 * Returns the localized default value of this product specification mapping in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized default value of this product specification mapping. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getDefaultValue(Locale locale, boolean useDefault);

	/**
	 * Returns the localized default value of this product specification mapping in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized default value of this product specification mapping
	 */
	@AutoEscape
	public String getDefaultValue(String languageId);

	/**
	 * Returns the localized default value of this product specification mapping in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized default value of this product specification mapping
	 */
	@AutoEscape
	public String getDefaultValue(String languageId, boolean useDefault);

	@AutoEscape
	public String getDefaultValueCurrentLanguageId();

	@AutoEscape
	public String getDefaultValueCurrentValue();

	/**
	 * Returns a map of the locales and localized default values of this product specification mapping.
	 *
	 * @return the locales and localized default values of this product specification mapping
	 */
	public Map<Locale, String> getDefaultValueMap();

	/**
	 * Sets the default value of this product specification mapping.
	 *
	 * @param defaultValue the default value of this product specification mapping
	 */
	public void setDefaultValue(String defaultValue);

	/**
	 * Sets the localized default value of this product specification mapping in the language.
	 *
	 * @param defaultValue the localized default value of this product specification mapping
	 * @param locale the locale of the language
	 */
	public void setDefaultValue(String defaultValue, Locale locale);

	/**
	 * Sets the localized default value of this product specification mapping in the language, and sets the default locale.
	 *
	 * @param defaultValue the localized default value of this product specification mapping
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setDefaultValue(
		String defaultValue, Locale locale, Locale defaultLocale);

	public void setDefaultValueCurrentLanguageId(String languageId);

	/**
	 * Sets the localized default values of this product specification mapping from the map of locales and localized default values.
	 *
	 * @param defaultValueMap the locales and localized default values of this product specification mapping
	 */
	public void setDefaultValueMap(Map<Locale, String> defaultValueMap);

	/**
	 * Sets the localized default values of this product specification mapping from the map of locales and localized default values, and sets the default locale.
	 *
	 * @param defaultValueMap the locales and localized default values of this product specification mapping
	 * @param defaultLocale the default locale
	 */
	public void setDefaultValueMap(
		Map<Locale, String> defaultValueMap, Locale defaultLocale);

	@Override
	public String[] getAvailableLanguageIds();

	@Override
	public String getDefaultLanguageId();

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException;

	@Override
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public ProductSpecificationMapping cloneWithOriginalValues();

}